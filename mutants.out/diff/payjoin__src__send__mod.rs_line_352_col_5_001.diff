--- payjoin/src/send/mod.rs
+++ replace find_change_index -> Result<Option<AdditionalFeeContribution>, InternalBuildSenderError> with Ok(None)
@@ -344,37 +344,17 @@
 
 /// Find the sender's change output index by eliminating the payee's output as a candidate.
 fn find_change_index(
     psbt: &Psbt,
     payee: &Script,
     fee: bitcoin::Amount,
     clamp_fee_contribution: bool,
 ) -> Result<Option<AdditionalFeeContribution>, InternalBuildSenderError> {
-    match (psbt.unsigned_tx.output.len(), clamp_fee_contribution) {
-        (0, _) => return Err(InternalBuildSenderError::NoOutputs),
-        (1, false) if psbt.unsigned_tx.output[0].script_pubkey == *payee =>
-            return Err(InternalBuildSenderError::FeeOutputValueLowerThanFeeContribution),
-        (1, true) if psbt.unsigned_tx.output[0].script_pubkey == *payee => return Ok(None),
-        (1, _) => return Err(InternalBuildSenderError::MissingPayeeOutput),
-        (2, _) => (),
-        _ => return Err(InternalBuildSenderError::AmbiguousChangeOutput),
-    }
-    let (index, output) = psbt
-        .unsigned_tx
-        .output
-        .iter()
-        .enumerate()
-        .find(|(_, output)| output.script_pubkey != *payee)
-        .ok_or(InternalBuildSenderError::MultiplePayeeOutputs)?;
-
-    Ok(Some(AdditionalFeeContribution {
-        max_amount: check_fee_output_amount(output, fee, clamp_fee_contribution)?,
-        vout: index,
-    }))
+    Ok(None) /* ~ changed by cargo-mutants ~ */
 }
 
 /// Check that the change output index is not out of bounds
 /// and that the additional fee contribution is not less than specified.
 fn check_change_index(
     psbt: &Psbt,
     payee: &Script,
     fee: bitcoin::Amount,
