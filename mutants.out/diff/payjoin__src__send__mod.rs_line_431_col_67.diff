--- payjoin/src/send/mod.rs
+++ replace / with % in serialize_url
@@ -423,17 +423,17 @@
     }
     if let Some(AdditionalFeeContribution { max_amount, vout }) = fee_contribution {
         url.query_pairs_mut()
             .append_pair("additionalfeeoutputindex", &vout.to_string())
             .append_pair("maxadditionalfeecontribution", &max_amount.to_sat().to_string());
     }
     if min_fee_rate > FeeRate::ZERO {
         // TODO serialize in rust-bitcoin <https://github.com/rust-bitcoin/rust-bitcoin/pull/1787/files#diff-c2ea40075e93ccd068673873166cfa3312ec7439d6bc5a4cbc03e972c7e045c4>
-        let float_fee_rate = min_fee_rate.to_sat_per_kwu() as f32 / 250.0_f32;
+        let float_fee_rate = min_fee_rate.to_sat_per_kwu() as f32 % /* ~ changed by cargo-mutants ~ */ 250.0_f32;
         url.query_pairs_mut().append_pair("minfeerate", &float_fee_rate.to_string());
     }
     Ok(url)
 }
 
 #[cfg(test)]
 pub(crate) mod test {
     use std::str::FromStr;
