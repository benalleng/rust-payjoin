
*** payjoin/src/send/mod.rs:238:51: replace == with != in PsbtContext::check_outputs

*** mutation diff:
--- payjoin/src/send/mod.rs
+++ replace == with != in PsbtContext::check_outputs
@@ -230,17 +230,17 @@
             match (original_outputs.peek(), self.fee_contribution) {
                 // fee output
                 (
                     Some((original_output_index, original_output)),
                     Some(AdditionalFeeContribution {
                         max_amount: max_fee_contrib,
                         vout: fee_contrib_idx,
                     }),
-                ) if proposed_txout.script_pubkey == original_output.script_pubkey
+                ) if proposed_txout.script_pubkey != /* ~ changed by cargo-mutants ~ */ original_output.script_pubkey
                     && *original_output_index == fee_contrib_idx =>
                 {
                     if proposed_txout.value < original_output.value {
                         contributed_fee = original_output.value - proposed_txout.value;
                         ensure!(contributed_fee <= max_fee_contrib, FeeContributionExceedsMaximum);
                         // The remaining fee checks are done in later in `check_fees`
                     }
                     original_outputs.next();


*** /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo test --no-run --verbose --package=payjoin@0.22.0
       Fresh unicode-ident v1.0.17
       Fresh cfg-if v1.0.0
       Fresh version_check v0.9.5
       Fresh shlex v1.3.0
       Fresh subtle v2.6.1
       Fresh cpufeatures v0.2.17
       Fresh autocfg v1.4.0
       Fresh smallvec v1.14.0
       Fresh memchr v2.7.4
       Fresh pin-project-lite v0.2.16
       Fresh itoa v1.0.14
       Fresh byteorder v1.5.0
       Fresh once_cell v1.20.3
       Fresh proc-macro2 v1.0.93
       Fresh fnv v1.0.7
       Fresh futures-core v0.3.31
       Fresh futures-sink v0.3.31
       Fresh bytes v1.10.0
       Fresh stable_deref_trait v1.2.0
       Fresh untrusted v0.9.0
       Fresh scopeguard v1.2.0
       Fresh futures-task v0.3.31
       Fresh libc v0.2.169
       Fresh quote v1.0.38
       Fresh typenum v1.18.0
       Fresh futures-channel v0.3.31
       Fresh pin-utils v0.1.0
       Fresh futures-io v0.3.31
       Fresh writeable v0.5.5
       Fresh litemap v0.7.4
       Fresh arrayvec v0.7.6
       Fresh icu_locid_transform_data v1.5.0
       Fresh icu_properties_data v1.5.0
       Fresh rustls-pki-types v1.11.0
       Fresh syn v2.0.98
       Fresh generic-array v0.14.7
       Fresh jobserver v0.1.32
       Fresh lock_api v0.4.12
       Fresh slab v0.4.9
       Fresh parking_lot_core v0.9.10
       Fresh socket2 v0.5.8
       Fresh signal-hook-registry v1.4.2
       Fresh mio v1.0.3
       Fresh hex-conservative v0.2.1
       Fresh pkg-config v0.3.31
       Fresh http v1.2.0
       Fresh utf16_iter v1.0.5
       Fresh ryu v1.0.19
       Fresh opaque-debug v0.3.1
       Fresh cc v1.2.15
       Fresh serde_derive v1.0.218
       Fresh block-buffer v0.10.4
       Fresh synstructure v0.13.1
       Fresh zerovec-derive v0.10.3
       Fresh zerocopy-derive v0.7.35
       Fresh displaydoc v0.2.5
       Fresh zeroize_derive v1.4.2
       Fresh futures-macro v0.3.31
       Fresh parking_lot v0.12.3
       Fresh tokio-macros v2.5.0
       Fresh icu_provider_macros v1.5.0
       Fresh bitcoin-io v0.1.3
       Fresh inout v0.1.4
       Fresh utf8_iter v1.0.4
       Fresh icu_normalizer_data v1.5.0
       Fresh zerofrom-derive v0.1.5
       Fresh yoke-derive v0.7.5
       Fresh zerocopy v0.7.35
       Fresh zeroize v1.8.1
       Fresh futures-util v0.3.31
       Fresh tokio v1.43.0
       Fresh write16 v1.0.0
       Fresh percent-encoding v2.3.1
       Fresh crypto-common v0.1.6
       Fresh tracing-core v0.1.33
       Fresh zerofrom v0.1.5
       Fresh ppv-lite86 v0.2.20
       Fresh form_urlencoded v1.2.1
       Fresh http-body v1.0.1
       Fresh tracing-attributes v0.1.28
       Fresh try-lock v0.2.5
       Fresh thiserror-impl v1.0.69
       Fresh yoke v0.7.5
       Fresh rand_chacha v0.3.1
       Fresh httparse v1.10.0
       Fresh secp256k1-sys v0.10.1
       Fresh serde_json v1.0.139
       Fresh bitcoin-internals v0.3.0
       Fresh tracing v0.1.41
       Fresh want v0.3.1
       Fresh bitflags v2.8.0
       Fresh httpdate v1.0.3
       Fresh tower-service v0.3.3
       Fresh digest v0.10.7
       Fresh zerovec v0.10.4
       Fresh rand v0.8.5
       Fresh rustls-webpki v0.102.8
       Fresh hyper v1.6.0
       Fresh syn v1.0.109
       Fresh thiserror v1.0.69
       Fresh universal-hash v0.4.0
       Fresh cipher v0.3.0
       Fresh getrandom v0.2.15
       Fresh powerfmt v0.2.0
       Fresh strsim v0.10.0
       Fresh ident_case v1.0.1
       Fresh bitcoin-units v0.1.2
       Fresh base58ck v0.1.0
       Fresh tinystr v0.7.6
       Fresh icu_collections v1.5.0
       Fresh secp256k1 v0.29.1
       Fresh darling_core v0.13.4
       Fresh hyper-util v0.1.10
       Fresh deranged v0.3.11
       Fresh hex_lit v0.1.1
       Fresh ring v0.17.10
       Fresh base64 v0.21.7
       Fresh time-core v0.1.2
       Fresh bech32 v0.11.0
       Fresh icu_locid v1.5.0
       Fresh num-conv v0.1.0
       Fresh bitcoin v0.32.5
       Fresh darling_macro v0.13.4
       Fresh serde v1.0.218
       Fresh zstd-sys v2.0.14+zstd.1.5.7
       Fresh universal-hash v0.5.1
       Fresh digest v0.9.0
       Fresh webpki-roots v0.26.8
       Fresh rustls-pemfile v2.2.0
       Fresh icu_provider v1.5.0
       Fresh time v0.3.37
       Fresh rand_core v0.6.4
       Fresh lazy_static v1.5.0
       Fresh base64ct v1.6.0
       Fresh adler2 v2.0.0
       Fresh darling v0.13.4
       Fresh chacha20 v0.9.1
       Fresh bzip2-sys v0.1.12+1.0.8
       Fresh poly1305 v0.8.0
       Fresh toml v0.5.11
       Fresh rustls v0.22.4
       Fresh icu_locid_transform v1.5.0
       Fresh rustls v0.23.23
       Fresh zstd-safe v5.0.2+zstd.1.5.2
       Fresh miniz_oxide v0.8.4
       Fresh password-hash v0.4.2
       Fresh rustls-webpki v0.101.7
       Fresh sct v0.7.1
       Fresh polyval v0.5.3
       Fresh sha2 v0.10.8
       Fresh hmac v0.12.1
       Fresh http-body-util v0.1.2
       Fresh cipher v0.4.4
       Fresh aead v0.5.2
       Fresh futures-executor v0.3.31
       Fresh icu_properties v1.5.1
       Fresh aead v0.4.3
       Fresh crypto-mac v0.11.0
       Fresh crc32fast v1.4.2
       Fresh base64 v0.22.1
       Fresh regex-syntax v0.8.5
       Fresh cpufeatures v0.1.5
       Fresh regex-syntax v0.6.29
       Fresh log v0.4.26
       Fresh hex v0.4.3
       Fresh anyhow v1.0.96
       Fresh xattr v1.4.0
       Fresh zstd v0.11.2+zstd.1.5.2
       Fresh chacha20poly1305 v0.10.1
       Fresh icu_normalizer v1.5.0
       Fresh regex-automata v0.4.9
       Fresh chacha20 v0.7.1
       Fresh hmac v0.11.0
       Fresh regex-automata v0.1.10
       Fresh rustls v0.21.12
       Fresh flate2 v1.0.35
       Fresh ghash v0.4.4
       Fresh futures v0.3.31
       Fresh pbkdf2 v0.11.0
       Fresh tokio-rustls v0.26.1
       Fresh aes v0.8.4
       Fresh serde_with_macros v1.5.2
       Fresh idna_adapter v1.2.0
       Fresh bzip2 v0.4.4
       Fresh hkdf v0.12.4
       Fresh aes v0.7.5
       Fresh ctr v0.7.0
       Fresh poly1305 v0.7.2
       Fresh sha1 v0.10.6
       Fresh tokio-util v0.7.13
       Fresh block-buffer v0.9.0
       Fresh filetime v0.2.25
       Fresh sync_wrapper v1.0.2
       Fresh linux-raw-sys v0.4.15
       Fresh overload v0.1.1
       Fresh constant_time_eq v0.1.5
       Fresh utf-8 v0.7.6
       Fresh idna v1.0.3
       Fresh data-encoding v2.8.0
       Fresh openssl-probe v0.1.6
       Fresh tower-layer v0.3.3
       Fresh webpki-roots v0.25.4
       Fresh zip v0.6.6
       Fresh rustix v0.38.44
       Fresh sha2 v0.9.9
       Fresh tar v0.4.43
       Fresh chacha20poly1305 v0.8.0
       Fresh aes-gcm v0.9.2
       Fresh bitcoin-hpke v0.13.0
       Fresh nu-ansi-term v0.46.0
       Fresh hyper-rustls v0.27.5
       Fresh serde_with v1.14.0
       Fresh url v2.5.4
       Fresh rustls-native-certs v0.7.3
       Fresh tower v0.5.2
       Fresh matchers v0.1.0
       Fresh regex v1.11.1
       Fresh hkdf v0.11.0
       Fresh minreq v2.13.2
       Fresh tokio-rustls v0.25.0
       Fresh sharded-slab v0.1.7
       Fresh serde_urlencoded v0.7.1
       Fresh tracing-log v0.2.0
       Fresh bitcoin_hashes v0.14.0
       Fresh thread_local v1.1.8
       Fresh base64 v0.13.1
       Fresh ipnet v2.11.0
       Fresh tungstenite v0.21.0
       Fresh percent-encoding-rfc3986 v0.1.3
       Fresh mime v0.3.17
       Fresh tracing-subscriber v0.3.19
       Fresh jsonrpc v0.18.0
       Fresh bitcoin-ohttp v0.6.0
       Fresh hyper-rustls v0.26.0
       Fresh bhttp v0.5.1
       Fresh bollard-stubs v1.42.0-rc.3
       Fresh getrandom v0.3.1
       Fresh combine v4.6.7
       Fresh bitcoincore-rpc-json v0.19.0
       Fresh async-trait v0.1.86
       Fresh socket2 v0.4.10
       Fresh spin v0.5.2
       Fresh tokio-tungstenite v0.21.0
       Fresh reqwest v0.12.12
       Fresh bitcoin_uri v0.1.0
       Fresh fastrand v2.3.0
       Fresh home v0.5.11
       Fresh sha1_smol v1.0.1
       Fresh untrusted v0.7.1
       Fresh either v1.13.0
       Fresh testcontainers v0.15.0
       Fresh bitcoincore-rpc v0.19.0
       Fresh pem v3.0.5
       Fresh yasna v0.5.2
       Fresh ring v0.16.20
       Fresh redis v0.23.3
       Fresh hyper-tungstenite v0.13.0
       Fresh which v4.4.2
       Fresh tempfile v3.17.1
       Dirty payjoin v0.22.0 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin): stale, unknown reason
   Compiling payjoin v0.22.0 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin)
       Fresh testcontainers-modules v0.3.7
       Fresh rcgen v0.11.3
       Fresh ohttp-relay v0.0.9
       Fresh bitcoind v0.36.1
     Running `/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name payjoin --edition=2021 payjoin/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="_core"' --cfg 'feature="_danger-local-https"' --cfg 'feature="bhttp"' --cfg 'feature="bitcoin_uri"' --cfg 'feature="default"' --cfg 'feature="directory"' --cfg 'feature="hpke"' --cfg 'feature="io"' --cfg 'feature="ohttp"' --cfg 'feature="reqwest"' --cfg 'feature="rustls"' --cfg 'feature="serde"' --cfg 'feature="serde_json"' --cfg 'feature="url"' --cfg 'feature="v2"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("_core", "_danger-local-https", "bhttp", "bitcoin_uri", "default", "directory", "hpke", "io", "ohttp", "psbt-merge", "reqwest", "rustls", "serde", "serde_json", "url", "v1", "v2"))' -C metadata=76501b9a61e507b2 -C extra-filename=-ae03882f01e95265 --out-dir /tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps --extern bhttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbhttp-2746a5453f8d471b.rmeta --extern bitcoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin-298b90ba178a15f0.rmeta --extern hpke=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_hpke-2a6b0ab7a2086e1f.rmeta --extern ohttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_ohttp-cadfadfde682ada1.rmeta --extern bitcoin_uri=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_uri-ebf62d20b213fcfb.rmeta --extern http=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhttp-6e597beb424be4c1.rmeta --extern log=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liblog-ac53f5b25f3b83de.rmeta --extern reqwest=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libreqwest-620badd69271381e.rmeta --extern rustls=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/librustls-7cb3998621e65660.rmeta --extern serde=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libserde-a4d3793b6b2fca6b.rmeta --extern serde_json=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libserde_json-a6b8ab449c3ddbb1.rmeta --extern url=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liburl-c0e1670478d1bf44.rmeta -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/secp256k1-sys-b2b0a24d6c197092/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-bf86b95756b91634/out`
       Dirty payjoin-directory v0.0.1 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin-directory): the dependency payjoin was rebuilt
   Compiling payjoin-directory v0.0.1 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin-directory)
     Running `/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name payjoin_directory --edition=2021 payjoin-directory/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --cfg 'feature="_danger-local-https"' --cfg 'feature="hyper-rustls"' --cfg 'feature="rustls"' --cfg 'feature="tokio-rustls"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("_danger-local-https", "hyper-rustls", "rustls", "tokio-rustls"))' -C metadata=010b952b1747e925 -C extra-filename=-02d483decc7de942 --out-dir /tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps --extern anyhow=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libanyhow-5961bfcea73d572a.rmeta --extern bhttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbhttp-2746a5453f8d471b.rmeta --extern bitcoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin-298b90ba178a15f0.rmeta --extern ohttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_ohttp-cadfadfde682ada1.rmeta --extern futures=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libfutures-1866898d8b52529b.rmeta --extern http_body_util=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhttp_body_util-e1145b6d1ba4edc1.rmeta --extern hyper=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhyper-1307e1e1070e6868.rmeta --extern hyper_rustls=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhyper_rustls-9349af30b14777f4.rmeta --extern hyper_util=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhyper_util-fe7ea56646670463.rmeta --extern payjoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libpayjoin-ae03882f01e95265.rmeta --extern redis=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libredis-99a6aef2eab15c8c.rmeta --extern rustls=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/librustls-7cb3998621e65660.rmeta --extern tokio=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtokio-f71bec379a459fa0.rmeta --extern tokio_rustls=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtokio_rustls-e8126ef9d3f0f54b.rmeta --extern tracing=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtracing-2a342e9904ade088.rmeta --extern tracing_subscriber=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtracing_subscriber-6656c75048ba9057.rmeta -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/secp256k1-sys-b2b0a24d6c197092/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-bf86b95756b91634/out`
       Dirty payjoin-test-utils v0.1.0 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin-test-utils): the dependency payjoin_directory was rebuilt
   Compiling payjoin-test-utils v0.1.0 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin-test-utils)
     Running `/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name payjoin_test_utils --edition=2021 payjoin-test-utils/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values())' -C metadata=3327c8c5712036d5 -C extra-filename=-988356b757c5cf07 --out-dir /tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps --extern bitcoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin-298b90ba178a15f0.rmeta --extern bitcoincore_rpc=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoincore_rpc-70f87cf954d34ade.rmeta --extern bitcoind=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoind-f0cd81faefc5b431.rmeta --extern http=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhttp-6e597beb424be4c1.rmeta --extern log=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liblog-ac53f5b25f3b83de.rmeta --extern ohttp_relay=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libohttp_relay-816e41072d2b7248.rmeta --extern once_cell=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libonce_cell-1ee5d6903c405662.rmeta --extern payjoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libpayjoin-ae03882f01e95265.rmeta --extern payjoin_directory=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libpayjoin_directory-02d483decc7de942.rmeta --extern rcgen=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/librcgen-67001120f8249fa3.rmeta --extern reqwest=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libreqwest-620badd69271381e.rmeta --extern testcontainers=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtestcontainers-bd2102c28620f768.rmeta --extern testcontainers_modules=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtestcontainers_modules-bc39b849570647c8.rmeta --extern tokio=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtokio-f71bec379a459fa0.rmeta --extern tracing=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtracing-2a342e9904ade088.rmeta --extern tracing_subscriber=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtracing_subscriber-6656c75048ba9057.rmeta --extern url=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liburl-c0e1670478d1bf44.rmeta -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/secp256k1-sys-b2b0a24d6c197092/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-bf86b95756b91634/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-c54051a3cc3a3bbc/out`
     Running `/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name integration --edition=2021 payjoin/tests/integration.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature="_core"' --cfg 'feature="_danger-local-https"' --cfg 'feature="bhttp"' --cfg 'feature="bitcoin_uri"' --cfg 'feature="default"' --cfg 'feature="directory"' --cfg 'feature="hpke"' --cfg 'feature="io"' --cfg 'feature="ohttp"' --cfg 'feature="reqwest"' --cfg 'feature="rustls"' --cfg 'feature="serde"' --cfg 'feature="serde_json"' --cfg 'feature="url"' --cfg 'feature="v2"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("_core", "_danger-local-https", "bhttp", "bitcoin_uri", "default", "directory", "hpke", "io", "ohttp", "psbt-merge", "reqwest", "rustls", "serde", "serde_json", "url", "v1", "v2"))' -C metadata=6b10beefbbe55cee -C extra-filename=-364c756a268821e2 --out-dir /tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps --extern bhttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbhttp-2746a5453f8d471b.rlib --extern bitcoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin-298b90ba178a15f0.rlib --extern hpke=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_hpke-2a6b0ab7a2086e1f.rlib --extern ohttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_ohttp-cadfadfde682ada1.rlib --extern bitcoin_uri=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_uri-ebf62d20b213fcfb.rlib --extern bitcoind=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoind-f0cd81faefc5b431.rlib --extern http=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhttp-6e597beb424be4c1.rlib --extern log=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liblog-ac53f5b25f3b83de.rlib --extern once_cell=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libonce_cell-1ee5d6903c405662.rlib --extern payjoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libpayjoin-ae03882f01e95265.rlib --extern payjoin_test_utils=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libpayjoin_test_utils-988356b757c5cf07.rlib --extern reqwest=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libreqwest-620badd69271381e.rlib --extern rustls=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/librustls-7cb3998621e65660.rlib --extern serde=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libserde-a4d3793b6b2fca6b.rlib --extern serde_json=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libserde_json-a6b8ab449c3ddbb1.rlib --extern tokio=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtokio-f71bec379a459fa0.rlib --extern tracing=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtracing-2a342e9904ade088.rlib --extern url=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liburl-c0e1670478d1bf44.rlib -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/secp256k1-sys-b2b0a24d6c197092/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-bf86b95756b91634/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-c54051a3cc3a3bbc/out`
     Running `/home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rustc --crate-name payjoin --edition=2021 payjoin/src/lib.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 --test --cfg 'feature="_core"' --cfg 'feature="_danger-local-https"' --cfg 'feature="bhttp"' --cfg 'feature="bitcoin_uri"' --cfg 'feature="default"' --cfg 'feature="directory"' --cfg 'feature="hpke"' --cfg 'feature="io"' --cfg 'feature="ohttp"' --cfg 'feature="reqwest"' --cfg 'feature="rustls"' --cfg 'feature="serde"' --cfg 'feature="serde_json"' --cfg 'feature="url"' --cfg 'feature="v2"' --check-cfg 'cfg(docsrs,test)' --check-cfg 'cfg(feature, values("_core", "_danger-local-https", "bhttp", "bitcoin_uri", "default", "directory", "hpke", "io", "ohttp", "psbt-merge", "reqwest", "rustls", "serde", "serde_json", "url", "v1", "v2"))' -C metadata=d84bb4935378f3a9 -C extra-filename=-b53cc5d74f931820 --out-dir /tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps -C incremental=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/incremental -L dependency=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps --extern bhttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbhttp-2746a5453f8d471b.rlib --extern bitcoin=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin-298b90ba178a15f0.rlib --extern hpke=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_hpke-2a6b0ab7a2086e1f.rlib --extern ohttp=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_ohttp-cadfadfde682ada1.rlib --extern bitcoin_uri=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoin_uri-ebf62d20b213fcfb.rlib --extern bitcoind=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libbitcoind-f0cd81faefc5b431.rlib --extern http=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libhttp-6e597beb424be4c1.rlib --extern log=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liblog-ac53f5b25f3b83de.rlib --extern once_cell=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libonce_cell-1ee5d6903c405662.rlib --extern payjoin_test_utils=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libpayjoin_test_utils-988356b757c5cf07.rlib --extern reqwest=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libreqwest-620badd69271381e.rlib --extern rustls=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/librustls-7cb3998621e65660.rlib --extern serde=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libserde-a4d3793b6b2fca6b.rlib --extern serde_json=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libserde_json-a6b8ab449c3ddbb1.rlib --extern tokio=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtokio-f71bec379a459fa0.rlib --extern tracing=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/libtracing-2a342e9904ade088.rlib --extern url=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/liburl-c0e1670478d1bf44.rlib -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/secp256k1-sys-b2b0a24d6c197092/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-bf86b95756b91634/out -L native=/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/build/ring-c54051a3cc3a3bbc/out`
    Finished `test` profile [unoptimized + debuginfo] target(s) in 1.59s
  Executable `/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/payjoin-b53cc5d74f931820`
  Executable `/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/integration-364c756a268821e2`

*** result: Success

*** /home/user/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/cargo test --verbose --package=payjoin@0.22.0
       Fresh unicode-ident v1.0.17
       Fresh cfg-if v1.0.0
       Fresh version_check v0.9.5
       Fresh shlex v1.3.0
       Fresh subtle v2.6.1
       Fresh autocfg v1.4.0
       Fresh cpufeatures v0.2.17
       Fresh smallvec v1.14.0
       Fresh memchr v2.7.4
       Fresh pin-project-lite v0.2.16
       Fresh itoa v1.0.14
       Fresh byteorder v1.5.0
       Fresh proc-macro2 v1.0.93
       Fresh fnv v1.0.7
       Fresh futures-core v0.3.31
       Fresh once_cell v1.20.3
       Fresh futures-sink v0.3.31
       Fresh bytes v1.10.0
       Fresh stable_deref_trait v1.2.0
       Fresh untrusted v0.9.0
       Fresh scopeguard v1.2.0
       Fresh libc v0.2.169
       Fresh quote v1.0.38
       Fresh typenum v1.18.0
       Fresh futures-channel v0.3.31
       Fresh futures-io v0.3.31
       Fresh futures-task v0.3.31
       Fresh pin-utils v0.1.0
       Fresh writeable v0.5.5
       Fresh litemap v0.7.4
       Fresh arrayvec v0.7.6
       Fresh syn v2.0.98
       Fresh generic-array v0.14.7
       Fresh jobserver v0.1.32
       Fresh slab v0.4.9
       Fresh parking_lot_core v0.9.10
       Fresh lock_api v0.4.12
       Fresh mio v1.0.3
       Fresh socket2 v0.5.8
       Fresh signal-hook-registry v1.4.2
       Fresh hex-conservative v0.2.1
       Fresh icu_locid_transform_data v1.5.0
       Fresh pkg-config v0.3.31
       Fresh rustls-pki-types v1.11.0
       Fresh icu_properties_data v1.5.0
       Fresh cc v1.2.15
       Fresh serde_derive v1.0.218
       Fresh block-buffer v0.10.4
       Fresh synstructure v0.13.1
       Fresh zerovec-derive v0.10.3
       Fresh zerocopy-derive v0.7.35
       Fresh displaydoc v0.2.5
       Fresh zeroize_derive v1.4.2
       Fresh futures-macro v0.3.31
       Fresh parking_lot v0.12.3
       Fresh tokio-macros v2.5.0
       Fresh icu_provider_macros v1.5.0
       Fresh bitcoin-io v0.1.3
       Fresh inout v0.1.4
       Fresh http v1.2.0
       Fresh zerofrom-derive v0.1.5
       Fresh yoke-derive v0.7.5
       Fresh zerocopy v0.7.35
       Fresh zeroize v1.8.1
       Fresh futures-util v0.3.31
       Fresh tokio v1.43.0
       Fresh write16 v1.0.0
       Fresh icu_normalizer_data v1.5.0
       Fresh opaque-debug v0.3.1
       Fresh utf16_iter v1.0.5
       Fresh ryu v1.0.19
       Fresh utf8_iter v1.0.4
       Fresh zerofrom v0.1.5
       Fresh ppv-lite86 v0.2.20
       Fresh percent-encoding v2.3.1
       Fresh crypto-common v0.1.6
       Fresh tracing-core v0.1.33
       Fresh http-body v1.0.1
       Fresh tracing-attributes v0.1.28
       Fresh try-lock v0.2.5
       Fresh yoke v0.7.5
       Fresh rand_chacha v0.3.1
       Fresh httparse v1.10.0
       Fresh form_urlencoded v1.2.1
       Fresh tracing v0.1.41
       Fresh want v0.3.1
       Fresh thiserror-impl v1.0.69
       Fresh httpdate v1.0.3
       Fresh zerovec v0.10.4
       Fresh rand v0.8.5
       Fresh rustls-webpki v0.102.8
       Fresh secp256k1-sys v0.10.1
       Fresh bitcoin-internals v0.3.0
       Fresh serde_json v1.0.139
       Fresh bitflags v2.8.0
       Fresh tower-service v0.3.3
       Fresh hyper v1.6.0
       Fresh syn v1.0.109
       Fresh digest v0.10.7
       Fresh universal-hash v0.4.0
       Fresh cipher v0.3.0
       Fresh tinystr v0.7.6
       Fresh icu_collections v1.5.0
       Fresh secp256k1 v0.29.1
       Fresh thiserror v1.0.69
       Fresh getrandom v0.2.15
       Fresh ident_case v1.0.1
       Fresh powerfmt v0.2.0
       Fresh strsim v0.10.0
       Fresh hyper-util v0.1.10
       Fresh bitcoin-units v0.1.2
       Fresh hex_lit v0.1.1
       Fresh base58ck v0.1.0
       Fresh icu_locid v1.5.0
       Fresh deranged v0.3.11
       Fresh darling_core v0.13.4
       Fresh ring v0.17.10
       Fresh time-core v0.1.2
       Fresh bech32 v0.11.0
       Fresh base64 v0.21.7
       Fresh num-conv v0.1.0
       Fresh zstd-sys v2.0.14+zstd.1.5.7
       Fresh icu_provider v1.5.0
       Fresh time v0.3.37
       Fresh serde v1.0.218
       Fresh bitcoin v0.32.5
       Fresh darling_macro v0.13.4
       Fresh universal-hash v0.5.1
       Fresh digest v0.9.0
       Fresh webpki-roots v0.26.8
       Fresh rustls-pemfile v2.2.0
       Fresh icu_locid_transform v1.5.0
       Fresh lazy_static v1.5.0
       Fresh rand_core v0.6.4
       Fresh adler2 v2.0.0
       Fresh base64ct v1.6.0
       Fresh rustls v0.23.23
       Fresh toml v0.5.11
       Fresh darling v0.13.4
       Fresh zstd-safe v5.0.2+zstd.1.5.2
       Fresh rustls v0.22.4
       Fresh chacha20 v0.9.1
       Fresh poly1305 v0.8.0
       Fresh sct v0.7.1
       Fresh icu_properties v1.5.1
       Fresh miniz_oxide v0.8.4
       Fresh password-hash v0.4.2
       Fresh bzip2-sys v0.1.12+1.0.8
       Fresh rustls-webpki v0.101.7
       Fresh polyval v0.5.3
       Fresh sha2 v0.10.8
       Fresh hmac v0.12.1
       Fresh cipher v0.4.4
       Fresh http-body-util v0.1.2
       Fresh aead v0.5.2
       Fresh futures-executor v0.3.31
       Fresh aead v0.4.3
       Fresh crypto-mac v0.11.0
       Fresh icu_normalizer v1.5.0
       Fresh crc32fast v1.4.2
       Fresh regex-syntax v0.6.29
       Fresh base64 v0.22.1
       Fresh regex-syntax v0.8.5
       Fresh hex v0.4.3
       Fresh cpufeatures v0.1.5
       Fresh log v0.4.26
       Fresh hmac v0.11.0
       Fresh bzip2 v0.4.4
       Fresh xattr v1.4.0
       Fresh anyhow v1.0.96
       Fresh pbkdf2 v0.11.0
       Fresh idna_adapter v1.2.0
       Fresh chacha20 v0.7.1
       Fresh rustls v0.21.12
       Fresh flate2 v1.0.35
       Fresh regex-automata v0.1.10
       Fresh regex-automata v0.4.9
       Fresh ghash v0.4.4
       Fresh futures v0.3.31
       Fresh aes v0.8.4
       Fresh chacha20poly1305 v0.10.1
       Fresh serde_with_macros v1.5.2
       Fresh zstd v0.11.2+zstd.1.5.2
       Fresh idna v1.0.3
       Fresh tokio-rustls v0.26.1
       Fresh hkdf v0.12.4
       Fresh ctr v0.7.0
       Fresh aes v0.7.5
       Fresh poly1305 v0.7.2
       Fresh sha1 v0.10.6
       Fresh tokio-util v0.7.13
       Fresh block-buffer v0.9.0
       Fresh filetime v0.2.25
       Fresh sync_wrapper v1.0.2
       Fresh constant_time_eq v0.1.5
       Fresh tower-layer v0.3.3
       Fresh linux-raw-sys v0.4.15
       Fresh url v2.5.4
       Fresh data-encoding v2.8.0
       Fresh overload v0.1.1
       Fresh webpki-roots v0.25.4
       Fresh openssl-probe v0.1.6
       Fresh utf-8 v0.7.6
       Fresh tower v0.5.2
       Fresh hyper-rustls v0.27.5
       Fresh tar v0.4.43
       Fresh chacha20poly1305 v0.8.0
       Fresh aes-gcm v0.9.2
       Fresh zip v0.6.6
       Fresh bitcoin-hpke v0.13.0
       Fresh sha2 v0.9.9
       Fresh rustix v0.38.44
       Fresh tungstenite v0.21.0
       Fresh nu-ansi-term v0.46.0
       Fresh rustls-native-certs v0.7.3
       Fresh serde_with v1.14.0
       Fresh minreq v2.13.2
       Fresh matchers v0.1.0
       Fresh regex v1.11.1
       Fresh hkdf v0.11.0
       Fresh sharded-slab v0.1.7
       Fresh tokio-rustls v0.25.0
       Fresh serde_urlencoded v0.7.1
       Fresh tracing-log v0.2.0
       Fresh bitcoin_hashes v0.14.0
       Fresh thread_local v1.1.8
       Fresh percent-encoding-rfc3986 v0.1.3
       Fresh mime v0.3.17
       Fresh base64 v0.13.1
       Fresh ipnet v2.11.0
       Fresh bollard-stubs v1.42.0-rc.3
       Fresh hyper-rustls v0.26.0
       Fresh tokio-tungstenite v0.21.0
       Fresh bitcoin-ohttp v0.6.0
       Fresh bhttp v0.5.1
       Fresh getrandom v0.3.1
       Fresh combine v4.6.7
       Fresh bitcoincore-rpc-json v0.19.0
       Fresh async-trait v0.1.86
       Fresh bitcoin_uri v0.1.0
       Fresh jsonrpc v0.18.0
       Fresh reqwest v0.12.12
       Fresh tracing-subscriber v0.3.19
       Fresh socket2 v0.4.10
       Fresh either v1.13.0
       Fresh fastrand v2.3.0
       Fresh sha1_smol v1.0.1
       Fresh untrusted v0.7.1
       Fresh spin v0.5.2
       Fresh home v0.5.11
       Fresh testcontainers v0.15.0
       Fresh hyper-tungstenite v0.13.0
       Fresh pem v3.0.5
       Fresh yasna v0.5.2
       Fresh tempfile v3.17.1
       Fresh which v4.4.2
       Fresh bitcoincore-rpc v0.19.0
       Fresh redis v0.23.3
       Fresh ring v0.16.20
       Fresh testcontainers-modules v0.3.7
       Fresh ohttp-relay v0.0.9
       Fresh payjoin-directory v0.0.1 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin-directory)
       Fresh bitcoind v0.36.1
       Fresh rcgen v0.11.3
       Fresh payjoin-test-utils v0.1.0 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin-test-utils)
       Fresh payjoin v0.22.0 (/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/payjoin)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 0.14s
     Running `/tmp/cargo-mutants-rust-payjoin-LfNyix.tmp/target/debug/deps/payjoin-b53cc5d74f931820`

running 35 tests
test bech32::test::bech32_for_qr ... ok
test into_url::tests::into_url_blob_scheme ... ok
test into_url::tests::http_uri_scheme_is_allowed ... ok
test into_url::tests::https_uri_scheme_is_allowed ... ok
test into_url::tests::into_url_file_scheme ... ok
test receive::v1::test::can_get_proposal_from_request ... ok
test receive::v1::test::test_interleave_shuffle ... ok
test send::error::tests::test_parse_json ... ok
test send::test::test_disable_output_substitution_query_param ... ok
test receive::v1::test::sender_specifies_excessive_fee_rate ... ok
test uri::tests::test_missing_amount ... ok
test receive::v1::test::unchecked_proposal_unlocks_after_checks ... ok
test uri::tests::test_todo_url_encoded ... ignored
test uri::tests::test_short ... ok
test ohttp::test::test_ohttp_keys_roundtrip ... ok
test uri::tests::test_unencrypted ... ok
test send::v1::test::handle_json_errors ... ok
test uri::tests::test_unsupported ... ok
test receive::v1::test::additional_input_weight_matches_known_weight ... ok
test uri::url_ext::tests::test_errors_when_parsing_exp ... ok
test uri::url_ext::tests::test_exp_get_set ... ok
test uri::url_ext::tests::test_errors_when_parsing_ohttp ... ok
test send::v2::test::req_ctx_ser_de_roundtrip ... ok
test uri::tests::test_valid_url ... ok
test uri::url_ext::tests::test_ohttp_get_set ... ok
test send::test::test_receiver_steals_sender_change - should panic ... ok
test uri::url_ext::tests::test_valid_v2_url_fragment_on_bip21 ... ok
test send::test::official_vectors ... FAILED
test receive::v2::test::test_v2_pj_uri ... ok
test receive::v2::test::receiver_ser_de_roundtrip ... ok
test uri::tests::test_valid_uris ... ok
test receive::v2::test::extract_err_req ... ok
test hpke::test::message_a_round_trip ... ok
test hpke::test::message_b_round_trip ... ok
test hpke::test::test_encrypted_payload_bit_uniformity ... ok

failures:

---- send::test::official_vectors stdout ----
original: Psbt {
    unsigned_tx: Transaction {
        version: Version(
            2,
        ),
        lock_time: 211 blocks,
        input: [
            TxIn {
                previous_output: OutPoint {
                    txid: 833b085de288cda6ff614c6e8655f61e7ae4f84604a2751998dc25a0d1ba278f,
                    vout: 0,
                },
                script_sig: Script(),
                sequence: Sequence(0xfffffffe),
                witness: Witness: {
                    indices: 0,
                    indices_start: 0,
                    witnesses: [
                    ],
                }
                ,
            },
        ],
        output: [
            TxOut {
                value: 95983068 SAT,
                script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 1de849f069d274150e3afeae8d72eb5a6b094430 OP_EQUAL),
            },
            TxOut {
                value: 2000000 SAT,
                script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 774096dbcf486743c22f4347e9b469febe8b677a OP_EQUAL),
            },
        ],
    },
    version: 0,
    xpub: {},
    proprietary: {},
    unknown: {},
    inputs: [
        Input {
            non_witness_utxo: None,
            witness_utxo: Some(
                TxOut {
                    value: 97983400 SAT,
                    script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 de4e1e9061ca59135b035ad5e6d47990454354d0 OP_EQUAL),
                },
            ),
            partial_sigs: {},
            sighash_type: None,
            redeem_script: None,
            witness_script: None,
            bip32_derivation: {},
            final_script_sig: Some(
                Script(OP_PUSHBYTES_22 0014c78a45725355828d5658074dd5260d5fcb698530),
            ),
            final_script_witness: Some(
                Witness: {
                    indices: 2,
                    indices_start: 106,
                    witnesses: [
                        [0x30, 0x44, 0x02, 0x20, 0x7c, 0x43, 0xe0, 0x3a, 0x75, 0xea, 0x7e, 0x47, 0x3f, 0x76, 0xbe, 0x1c, 0xb6, 0xea, 0x54, 0xf4, 0x02, 0x36, 0x67, 0xe0, 0xf4, 0x4b, 0x8b, 0xc0, 0x5f, 0xf6, 0xaa, 0x01, 0xfc, 0x23, 0x24, 0xd3, 0x02, 0x20, 0x3f, 0xf4, 0x63, 0xd8, 0xf5, 0x99, 0xde, 0x01, 0x23, 0x52, 0x44, 0xe5, 0x84, 0x34, 0x4d, 0x01, 0x0d, 0x20, 0x5f, 0x04, 0xce, 0xee, 0xdf, 0x67, 0xf9, 0x5d, 0x78, 0xa5, 0x9e, 0xa8, 0x96, 0x35, 0x01],
                        [0x03, 0x15, 0x9a, 0xc0, 0x1a, 0xa0, 0xd5, 0x87, 0x54, 0xc4, 0xb4, 0xd8, 0xb7, 0xd3, 0x49, 0xed, 0x1e, 0xdf, 0xcf, 0x0b, 0x36, 0x2b, 0x4f, 0x6b, 0x55, 0x10, 0x67, 0x23, 0xa2, 0x85, 0x8f, 0x85, 0x16],
                    ],
                }
                ,
            ),
            ripemd160_preimages: {},
            sha256_preimages: {},
            hash160_preimages: {},
            hash256_preimages: {},
            tap_key_sig: None,
            tap_script_sigs: {},
            tap_scripts: {},
            tap_key_origins: {},
            tap_internal_key: None,
            tap_merkle_root: None,
            proprietary: {},
            unknown: {},
        },
    ],
    outputs: [
        Output {
            redeem_script: Some(
                Script(OP_0 OP_PUSHBYTES_20 46f61a2bba73828ee585b4a5fc37946a7d8cc514),
            ),
            witness_script: None,
            bip32_derivation: {},
            tap_internal_key: None,
            tap_tree: None,
            tap_key_origins: {},
            proprietary: {},
            unknown: {},
        },
        Output {
            redeem_script: None,
            witness_script: None,
            bip32_derivation: {},
            tap_internal_key: None,
            tap_tree: None,
            tap_key_origins: {},
            proprietary: {},
            unknown: {},
        },
    ],
}
original: Psbt {
    unsigned_tx: Transaction {
        version: Version(
            2,
        ),
        lock_time: 211 blocks,
        input: [
            TxIn {
                previous_output: OutPoint {
                    txid: 833b085de288cda6ff614c6e8655f61e7ae4f84604a2751998dc25a0d1ba278f,
                    vout: 0,
                },
                script_sig: Script(),
                sequence: Sequence(0xfffffffe),
                witness: Witness: {
                    indices: 0,
                    indices_start: 0,
                    witnesses: [
                    ],
                }
                ,
            },
        ],
        output: [
            TxOut {
                value: 95983068 SAT,
                script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 1de849f069d274150e3afeae8d72eb5a6b094430 OP_EQUAL),
            },
            TxOut {
                value: 2000000 SAT,
                script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 774096dbcf486743c22f4347e9b469febe8b677a OP_EQUAL),
            },
        ],
    },
    version: 0,
    xpub: {},
    proprietary: {},
    unknown: {},
    inputs: [
        Input {
            non_witness_utxo: None,
            witness_utxo: Some(
                TxOut {
                    value: 97983400 SAT,
                    script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 de4e1e9061ca59135b035ad5e6d47990454354d0 OP_EQUAL),
                },
            ),
            partial_sigs: {},
            sighash_type: None,
            redeem_script: None,
            witness_script: None,
            bip32_derivation: {},
            final_script_sig: Some(
                Script(OP_PUSHBYTES_22 0014c78a45725355828d5658074dd5260d5fcb698530),
            ),
            final_script_witness: Some(
                Witness: {
                    indices: 2,
                    indices_start: 106,
                    witnesses: [
                        [0x30, 0x44, 0x02, 0x20, 0x7c, 0x43, 0xe0, 0x3a, 0x75, 0xea, 0x7e, 0x47, 0x3f, 0x76, 0xbe, 0x1c, 0xb6, 0xea, 0x54, 0xf4, 0x02, 0x36, 0x67, 0xe0, 0xf4, 0x4b, 0x8b, 0xc0, 0x5f, 0xf6, 0xaa, 0x01, 0xfc, 0x23, 0x24, 0xd3, 0x02, 0x20, 0x3f, 0xf4, 0x63, 0xd8, 0xf5, 0x99, 0xde, 0x01, 0x23, 0x52, 0x44, 0xe5, 0x84, 0x34, 0x4d, 0x01, 0x0d, 0x20, 0x5f, 0x04, 0xce, 0xee, 0xdf, 0x67, 0xf9, 0x5d, 0x78, 0xa5, 0x9e, 0xa8, 0x96, 0x35, 0x01],
                        [0x03, 0x15, 0x9a, 0xc0, 0x1a, 0xa0, 0xd5, 0x87, 0x54, 0xc4, 0xb4, 0xd8, 0xb7, 0xd3, 0x49, 0xed, 0x1e, 0xdf, 0xcf, 0x0b, 0x36, 0x2b, 0x4f, 0x6b, 0x55, 0x10, 0x67, 0x23, 0xa2, 0x85, 0x8f, 0x85, 0x16],
                    ],
                }
                ,
            ),
            ripemd160_preimages: {},
            sha256_preimages: {},
            hash160_preimages: {},
            hash256_preimages: {},
            tap_key_sig: None,
            tap_script_sigs: {},
            tap_scripts: {},
            tap_key_origins: {},
            tap_internal_key: None,
            tap_merkle_root: None,
            proprietary: {},
            unknown: {},
        },
    ],
    outputs: [
        Output {
            redeem_script: Some(
                Script(OP_0 OP_PUSHBYTES_20 46f61a2bba73828ee585b4a5fc37946a7d8cc514),
            ),
            witness_script: None,
            bip32_derivation: {},
            tap_internal_key: None,
            tap_tree: None,
            tap_key_origins: {},
            proprietary: {},
            unknown: {},
        },
        Output {
            redeem_script: None,
            witness_script: None,
            bip32_derivation: {},
            tap_internal_key: None,
            tap_tree: None,
            tap_key_origins: {},
            proprietary: {},
            unknown: {},
        },
    ],
}
proposal: Psbt {
    unsigned_tx: Transaction {
        version: Version(
            2,
        ),
        lock_time: 211 blocks,
        input: [
            TxIn {
                previous_output: OutPoint {
                    txid: 833b085de288cda6ff614c6e8655f61e7ae4f84604a2751998dc25a0d1ba278f,
                    vout: 0,
                },
                script_sig: Script(),
                sequence: Sequence(0xfffffffe),
                witness: Witness: {
                    indices: 0,
                    indices_start: 0,
                    witnesses: [
                    ],
                }
                ,
            },
            TxIn {
                previous_output: OutPoint {
                    txid: 833b085de288cda6ff614c6e8655f61e7ae4f84604a2751998dc25a0d1ba278f,
                    vout: 1,
                },
                script_sig: Script(),
                sequence: Sequence(0xfffffffe),
                witness: Witness: {
                    indices: 0,
                    indices_start: 0,
                    witnesses: [
                    ],
                }
                ,
            },
        ],
        output: [
            TxOut {
                value: 95982886 SAT,
                script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 1de849f069d274150e3afeae8d72eb5a6b094430 OP_EQUAL),
            },
            TxOut {
                value: 4000000 SAT,
                script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 774096dbcf486743c22f4347e9b469febe8b677a OP_EQUAL),
            },
        ],
    },
    version: 0,
    xpub: {},
    proprietary: {},
    unknown: {},
    inputs: [
        Input {
            non_witness_utxo: None,
            witness_utxo: Some(
                TxOut {
                    value: 97983400 SAT,
                    script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 de4e1e9061ca59135b035ad5e6d47990454354d0 OP_EQUAL),
                },
            ),
            partial_sigs: {},
            sighash_type: None,
            redeem_script: Some(
                Script(OP_0 OP_PUSHBYTES_20 c78a45725355828d5658074dd5260d5fcb698530),
            ),
            witness_script: None,
            bip32_derivation: {
                PublicKey(
                    16858f85a2236710556b4f2b360bcfdf1eed49d3b7d8b4c45487d5a01ac09a1521b30c782a5fbfd530c146f9a1524b1302e31f08e1dd936f3e4f7ccc55c45f40,
                ): (
                    0x485cd650,
                    49'/1'/0'/1/0,
                ),
            },
            final_script_sig: None,
            final_script_witness: None,
            ripemd160_preimages: {},
            sha256_preimages: {},
            hash160_preimages: {},
            hash256_preimages: {},
            tap_key_sig: None,
            tap_script_sigs: {},
            tap_scripts: {},
            tap_key_origins: {},
            tap_internal_key: None,
            tap_merkle_root: None,
            proprietary: {},
            unknown: {},
        },
        Input {
            non_witness_utxo: None,
            witness_utxo: Some(
                TxOut {
                    value: 2000000 SAT,
                    script_pubkey: Script(OP_HASH160 OP_PUSHBYTES_20 c8f2cbf9ca61472c88e464d46b3574845d91d8d5 OP_EQUAL),
                },
            ),
            partial_sigs: {},
            sighash_type: None,
            redeem_script: None,
            witness_script: None,
            bip32_derivation: {},
            final_script_sig: Some(
                Script(OP_PUSHBYTES_22 00145f806655e5924c9204c2d51be5394f4bf9eda210),
            ),
            final_script_witness: Some(
                Witness: {
                    indices: 2,
                    indices_start: 106,
                    witnesses: [
                        [0x30, 0x44, 0x02, 0x20, 0x67, 0xbb, 0x7b, 0x40, 0xdf, 0x25, 0xa5, 0x4f, 0x45, 0x81, 0x0a, 0x5b, 0x17, 0x5d, 0x2f, 0x63, 0xeb, 0xd0, 0x6d, 0xfb, 0x06, 0x82, 0xb3, 0xd2, 0x5c, 0x8d, 0x6b, 0x4d, 0x8e, 0xdb, 0xfb, 0x56, 0x02, 0x20, 0x7b, 0x65, 0x58, 0x01, 0xa0, 0x5e, 0x2c, 0xf0, 0xc1, 0xe8, 0x71, 0x85, 0x96, 0x9a, 0x8e, 0x10, 0xd5, 0xcc, 0x95, 0xdb, 0x09, 0x7b, 0x31, 0x7d, 0x1a, 0xce, 0x5a, 0x9a, 0xf0, 0xd0, 0x44, 0x34, 0x01],
                        [0x02, 0x65, 0xd6, 0x3c, 0xf5, 0xb4, 0x1b, 0x7c, 0x84, 0xdc, 0x76, 0xa3, 0x04, 0xe6, 0xfb, 0x80, 0xee, 0xe2, 0x2b, 0x31, 0xd2, 0x99, 0x9d, 0x28, 0xd3, 0x0d, 0x22, 0x38, 0xda, 0x30, 0x71, 0x5f, 0xad],
                    ],
                }
                ,
            ),
            ripemd160_preimages: {},
            sha256_preimages: {},
            hash160_preimages: {},
            hash256_preimages: {},
            tap_key_sig: None,
            tap_script_sigs: {},
            tap_scripts: {},
            tap_key_origins: {},
            tap_internal_key: None,
            tap_merkle_root: None,
            proprietary: {},
            unknown: {},
        },
    ],
    outputs: [
        Output {
            redeem_script: Some(
                Script(OP_0 OP_PUSHBYTES_20 46f61a2bba73828ee585b4a5fc37946a7d8cc514),
            ),
            witness_script: None,
            bip32_derivation: {
                PublicKey(
                    7caf2e109c6e3b026f9044d8fd60e47ea330301cb55cebf197ae691e58c10bcab4bcc21ffb3b8042c82dcb7547bffdcda3766fd3ff3e93a5278e80ec1c0b32f8,
                ): (
                    0x485cd650,
                    49'/1'/0'/1/1,
                ),
            },
            tap_internal_key: None,
            tap_tree: None,
            tap_key_origins: {},
            proprietary: {},
            unknown: {},
        },
        Output {
            redeem_script: None,
            witness_script: None,
            bip32_derivation: {},
            tap_internal_key: None,
            tap_tree: None,
            tap_key_origins: {},
            proprietary: {},
            unknown: {},
        },
    ],
}

thread 'send::test::official_vectors' panicked at payjoin/src/send/mod.rs:482:40:
called `Result::unwrap()` on an `Err` value: OutputValueDecreased


failures:
    send::test::official_vectors

test result: FAILED. 33 passed; 1 failed; 1 ignored; 0 measured; 0 filtered out; finished in 0.40s

error: test failed, to rerun pass `-p payjoin --lib`

*** result: Failure(101)
